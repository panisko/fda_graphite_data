{"name":"graphite","type":"virtual_device","properties":{"deviceIcon":0,"categories":"[\"other\"]","currentIcon":"0","log":"","logTemp":"","mainLoop":"--statusPiec = fibaro:getGlobal(\"Piec\");\n\nlocal device = fibaro:getSelfId();\nfibaro:debug(\"device \" .. device)\nlocal ipaddress = fibaro:getValue(device, \"IPAddress\");\nlocal port = fibaro:getValue(device, \"TCPPort\");\nlocal socket = Net.FTcpSocket(ipaddress, port); \nsocket:setReadTimeout(500);\n\nDebug = function ( color, message )\n  fibaro:debug(string.format('<%s style=\"color:%s;\">%s', \"span\", color, message))\nend\n\nSend = function (deviceId , suffix, metric)\n  \tlocal ipaddress = fibaro:getValue(device, \"IPAddress\");\n\tlocal port = fibaro:getValue(device, \"TCPPort\");\n\tlocal socket = Net.FTcpSocket(ipaddress, port); \n\tsocket:setReadTimeout(250);\n  \tlocal name = fibaro:get(deviceId, 'userDescription');\n  \t--fibaro:debug(name);\n  \tlocal value = fibaro:getValue(deviceId, metric);\n \tlocal msg = \"home.fibaro.\" .. name .. \".\" ..suffix .. \" \" .. value.. \" \" .. os.time() ..\" \\n\"; \n  \t--Debug(\"green\", msg)\n  \tlocal bytes, errorCode = socket:write(msg); \n\nend\n\n\n-- temperatura\n--tab={71, 56, 121, 48, 52, 75, 15, 79}\ntab = fibaro:getDevicesId({type = \"com.fibaro.temperatureSensor\"})\n--local = \nfor k,v in ipairs(tab) \ndo \n  \n  \tSend(v,\"temp\", \"value\")\n\tSend(v, \"batteryLevel\", \"batteryLevel\")\n  \t\n  \t\nend\n\n--tab = {51, 70, 55, 120, 47, 14, 74 }\ntab = fibaro:getDevicesId({type = \"com.fibaro.setPoint\"})\n\nfor k,v in ipairs(tab) \ndo \n  \tSend(v,\"targetTemp\", \"targetLevel\")\n  \tSend(v,\"mode\", \"mode\")\n  \tSend(v,\"valve\", \"value\")\n  \tSend(v, \"batteryLevel\", \"batteryLevel\")\n  \tDebug(\"green\", v)\nend\n\n\n\n--Status pieca\nlocal value = fibaro:getValue(87, \"ui.Label1.value\")\n\nif ( string.find(value, 'ERROR') ~= nil )\nthen\n  \tlocal msg = \"home.fibaro.piec.status 99 \" .. os.time() ..\" \\n\"; \n  \tlocal bytes, errorCode = socket:write(msg);\nend\n\nif ( tonumber(string.find(value,\"ON\")) ~= nil  )\nthen\n    local msg = \"home.fibaro.piec.status 1 \" .. os.time() ..\" \\n\"; \n  \t--Debug(\"green\", msg)\n  \tlocal bytes, errorCode = socket:write(msg);\nend\nif ( tonumber(string.find(value,\"OFF\")) ~= nil )\nthen\t\n   \tlocal msg = \"home.fibaro.piec.status 0 \" .. os.time() ..\" \\n\"; \n  \t--Debug(\"green\", msg)\n  \tlocal bytes, errorCode = socket:write(msg);\nend\n\n\n-- send weather\nlocal bytes, errorCode = socket:write(\"home.fibaro.pogoda.wilgotnosc \" ..fibaro:getValue(3, \"Humidity\") ..\" \" .. os.time() ..\" \\n\" );\nlocal bytes, errorCode = socket:write(\"home.fibaro.pogoda.temp \" ..fibaro:getValue(3, \"Temperature\") ..\" \" .. os.time() ..\" \\n\" );\nlocal bytes, errorCode = socket:write(\"home.fibaro.pogoda.wiatr \" ..fibaro:getValue(3, \"Wind\") ..\" \" .. os.time() ..\" \\n\" );\nlocal bytes, errorCode = socket:write(\"home.fibaro.pogoda.cisnienie \" ..fibaro:getValue(3, \"Pressure\") ..\" \" .. os.time() ..\" \\n\" );\n\n--send heating status\nlocal virtualDeviceHeating = fibaro:getDevicesId({type = \"virtual_device\" , name =\"Termostat\"})[1]\nlocal status = fibaro:getValue(virtualDeviceHeating, \"ui.Label7.value\")\nif (string.find(status, 'Grzanie')  ~= nil)\nthen\n        local msg = \"home.fibaro.grzanie.status 1 \" .. os.time() ..\" \\n\";\n        local bytes, errorCode = socket:write(msg);\n  \t\tfibaro:debug(\"grzanie\")\nend\nif (string.find(status, 'Wietrzenie')  ~= nil)\nthen\n        local msg = \"home.fibaro.grzanie.status 0 \" .. os.time() ..\" \\n\";\n        local bytes, errorCode = socket:write(msg);\n  \t\tfibaro:debug(\"wietrzenia\")\nend\n\nlocal switchPointValve = fibaro:getGlobal(\"switchPointValve\")\nlocal msg = \"home.fibaro.grzanie.switchPointValve \".. fibaro:getGlobal(\"switchPointValve\") .. \" \" .. os.time() ..\" \\n\";\nlocal bytes, errorCode = socket:write(msg);\n\nfibaro:debug(\"error \" ..errorCode)\nfibaro:setGlobal('graphiteError', errorCode)\nfibaro:debug(msg)\n\n--TempVsTargetTemp = fibaro:getGlobal(\"TempVsTargetTemp\")\nlocal TargetVsCurrent = tonumber(fibaro:getValue(89, \"ui.Label9.value\"))\n\n  \n--local msg = \"home.fibaro.grzanie.TempVsTargetTemp \".. math.log(TempVsTargetTemp) * 100 .. \" \" .. os.time() ..\" \\n\";\nlocal msg = \"home.fibaro.grzanie.TargetVsCurrent \".. TargetVsCurrent .. \" \" .. os.time() ..\" \\n\";\nlocal bytes, errorCode = socket:write(msg);\n\nfibaro:debug(\"error \" ..errorCode)\nfibaro:setGlobal('graphiteError', errorCode)\nfibaro:debug(msg)\n","visible":"true","rows":[]},"actions":{"pressButton":1,"setSlider":2,"setProperty":2}}