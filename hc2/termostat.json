{"name":"Termostat","type":"virtual_device","properties":{"deviceIcon":0,"categories":"[\"other\"]","currentIcon":"0","log":"","logTemp":"","mainLoop":"local device = fibaro:getSelfId();\n\n\n--local piec = fibaro:getGlobal(\"Piec\");\n\n-- local tempParter = fibaro:getGlobal(\"SetTempParter\")\nlocal tempPietro = fibaro:getGlobal(\"SetTempPietro\")\n--local avgParter = fibaro:getGlobal(\"AvgTempParter\")\nlocal avgPietro = fibaro:getGlobal(\"AvgTempPietro\")\nlocal status = fibaro:getGlobal(\"Status\")\nlocal piec = fibaro:getGlobal(\"Piec\")\nlocal switchPointValve = fibaro:getGlobal(\"switchPointValve\")\nlocal tempZewn = fibaro:getValue(3, \"Temperature\")\n\n--tab = { 55, 70, 120, 47, 51, 74 }\ntab = fibaro:getDevicesId({type = \"com.fibaro.setPoint\"})\n\n--tab1 = fibaro:getDevicesId({type = \"com.fibaro.temperatureSensor\", enabled = \"true\" })\n\nDebug = function ( color, message )\n  fibaro:debug(string.format('<%s style=\"color:%s;\">%s', \"span\", color, message))\nend\n\nRemoveDeadNodes = function(tab)\ntab_new = tab\n  \tfor k,v in ipairs(tab)\n\t\tdo\n\t\t--value = tonumber(fibaro:getValue(v, \"value\"))\n    \tisDead =  fibaro:getValue(v, \"dead\");\n    \tif (isDead == '1')\n      \t\tthen\n      \t\t--Debug(\"blue\", 'Device is dead: ' .. v )\n      \t\ttable.remove(tab_new, k)\n      \tend\n    end\n\treturn tab_new\nend\n\nCalculateAverageImp = function(tab)\nlocal sum = 0\nlocal count = 0 \nlocal avg = 0\nlocal value = 0 \n\tfor k,v in ipairs(tab)\n\t\tdo\n\t\ttargetTemp = tonumber(fibaro:getValue(v, \"targetLevel\"))\n    \tcurrentTemp = tonumber(fibaro:getValue(v+1, \"value\"))\n      \t--value=currentTemp/targetTemp\n    \tvalue=targetTemp/currentTemp\n    \tsum = sum + value\n     \t--sum = sum + tonumber(fibaro:getValue(v, \"value\"));\n\t\tcount = count + 1\n    end\n  --response = (math.floor(sum/count * 100)/100)\n  response = tonumber(sum/count)\n  return  tonumber(response)\nend\n\nCalculateAverage = function(tab)\nlocal sum = 0\nlocal count = 0 \nlocal avg = 0\nlocal value = 0 \n\tfor k,v in ipairs(tab)\n\t\tdo\n\t\tvalue = tonumber(fibaro:getValue(v, \"value\"))\n      \tif (value > -1)\n        \tthen\n   \t    \tsum = sum + value\n     \t\t--sum = sum + tonumber(fibaro:getValue(v, \"value\"));\n\t\t\tcount = count + 1\n        end\n\tend\n  return  tonumber(sum/count)\nend\n\nCalculateAverageWithoutDeadNodes = function(tab)\n  local tab_new = RemoveDeadNodes(tab)\nreturn CalculateAverage(tab_new)\nend \n\n\nCalculateAverageWithoutDeadNodesImp = function(tab)\n  local tab_new = RemoveDeadNodes(tab)\nreturn CalculateAverageImp(tab_new)\nend \n\n--fibaro:call(device, \"setProperty\", \"ui.Label1.value\", tempParter)\n\nfibaro:call(device, \"setProperty\", \"ui.Label2.value\", tempPietro)\n\nfibaro:call(device, \"setProperty\", \"ui.Label3.value\", piec)\n\n--fibaro:call(device, \"setProperty\", \"ui.Label4.value\", avgParter)\n\nfibaro:call(device, \"setProperty\", \"ui.Label5.value\", avgPietro)\n\nfibaro:call(device, \"setProperty\", \"ui.Label6.value\", CalculateAverageWithoutDeadNodes(tab))\n\nfibaro:call(device, \"setProperty\", \"ui.Label7.value\", status)\n\nfibaro:call(device, \"setProperty\", \"ui.Label8.value\", switchPointValve)\n\nTempVsTargetTemp = CalculateAverageWithoutDeadNodesImp(tab)\n\nfibaro:call(device, \"setProperty\", \"ui.Label9.value\", TempVsTargetTemp)\n--fibaro:debug(TempVsTargetTemp)\n\nfibaro:setGlobal(\"TempVsTartgetTemp\", TempVsTargetTemp)","ui.Label2.value":"19","ui.Label3.value":"ON","ui.Label5.value":"19","ui.Label6.value":"19","ui.Label7.value":"Grzanie","ui.Label8.value":"18","ui.Label9.value":"0.991588","visible":"true","rows":[{"type":"label","elements":[{"id":1,"lua":false,"waitForResponse":false,"caption":"TargetVsCurrent","name":"Label9","favourite":false,"main":true}]},{"type":"label","elements":[{"id":2,"lua":false,"waitForResponse":false,"caption":"Set Temp","name":"Label2","favourite":false,"main":false}]},{"type":"label","elements":[{"id":3,"lua":false,"waitForResponse":false,"caption":"Avg Temp","name":"Label5","favourite":false,"main":false}]},{"type":"button","elements":[{"id":4,"lua":true,"waitForResponse":false,"caption":"-0.5st","name":"Button31","empty":false,"msg":"local device = fibaro:getSelfId();\n\nlocal value = fibaro:getValue(device, \"ui.Label2.value\")\n\nif ( tonumber(value) < 10 )\n  then\n  \tfibaro:debug(\"Temp too high\");\n  \tfibaro:setGlobal(\"SetTempPietro\",10)\n  \tfibaro:call(device, \"setProperty\", \"ui.Label2.value\", 10)\n  else\n  fibaro:setGlobal(\"SetTempPietro\",value - 0.5 )\n  fibaro:call(device, \"setProperty\", \"ui.Label2.value\", value - 0.5)\nend","buttonIcon":0,"favourite":false,"main":false},{"id":5,"lua":true,"waitForResponse":false,"caption":"+0.5st","name":"Button32","empty":false,"msg":"local device = fibaro:getSelfId();\n\nlocal value = fibaro:getValue(device, \"ui.Label2.value\")\n\nif ( tonumber(value) > 25 )\n  then\n  \tfibaro:debug(\"Temp too high\");\n  \tfibaro:setGlobal(\"Pietro\",20)\n  \tfibaro:call(device, \"setProperty\", \"ui.Label2.value\", 20)\n  else\n  fibaro:setGlobal(\"SetTempPietro\",value + 0.5)\n  fibaro:call(device, \"setProperty\", \"ui.Label2.value\", value + 0.5)\nend\n","buttonIcon":0,"favourite":false,"main":false}]},{"type":"label","elements":[{"id":6,"lua":false,"waitForResponse":false,"caption":"Status piec","name":"Label3","favourite":false,"main":false}]},{"type":"label","elements":[{"id":7,"lua":false,"waitForResponse":false,"caption":"Srednia valve","name":"Label6","favourite":false,"main":false}]},{"type":"label","elements":[{"id":8,"lua":false,"waitForResponse":false,"caption":"switchPoint","name":"Label8","favourite":false,"main":false}]},{"type":"button","elements":[{"id":9,"lua":true,"waitForResponse":false,"caption":"Zimniej","name":"Button41","empty":false,"msg":"local device = fibaro:getSelfId();\n\nlocal value = fibaro:getGlobal(\"switchPointValve\")\n\n\n\nif ( tonumber(value) > 50 )\n  then\n  \tfibaro:debug(\"Switch point too high \");\n  \tfibaro:setGlobal(\"switchPointValve\",50)\n  \tfibaro:call(device, \"setProperty\", \"ui.Label8.value\", 50)\n  else\n  fibaro:setGlobal(\"switchPointValve\",value + 0.5)\n  fibaro:call(device, \"setProperty\", \"ui.Label8.value\", value + 0.5)\nend\n","buttonIcon":0,"favourite":false,"main":false},{"id":10,"lua":true,"waitForResponse":false,"caption":"Cieplej","name":"Button42","empty":false,"msg":"local device = fibaro:getSelfId();\n\nlocal value = fibaro:getGlobal(\"switchPointValve\")\n\n\n\nif ( tonumber(value) < 10 )\n  then\n  \tfibaro:debug(\"Switch point too high \");\n  \tfibaro:setGlobal(\"switchPointValve\",10)\n  \tfibaro:call(device, \"setProperty\", \"ui.Label8.value\", 10)\n  else\n  fibaro:setGlobal(\"switchPointValve\",value - 0.5)\n  fibaro:call(device, \"setProperty\", \"ui.Label8.value\", value - 0.5)\nend\n","buttonIcon":0,"favourite":false,"main":false}]},{"type":"label","elements":[{"id":11,"lua":false,"waitForResponse":false,"caption":"Status","name":"Label7","favourite":false,"main":false}]},{"type":"button","elements":[{"id":12,"lua":true,"waitForResponse":false,"caption":"Wietrzenie","name":"WietrzenieON","empty":false,"msg":"--tab = { 55, 70, 120, 47, 51, 74 }\n--tab = {51, 70, 55, 120, 47, 14, 74 }\ntab = fibaro:getDevicesId({type = \"com.fibaro.setPoint\"})\npiecId = 87\nheatingType = 0\nSetMode = function(tab, heatingType)\n\tfor k,v in ipairs(tab)\n\t\tdo\n  \t\tdevice = v + 2 \n    \tfibaro:debug(\"Setting heatting type to \" .. heatingType ..\" on \" ..device)\n    \tfibaro:call(device, \"setMode\", heatingType);\n    \tfibaro:setSceneEnabled(70, false);\n    \tfibaro:killScenes(70);\n    \tfibaro:call(piecId, \"pressButton\", 3)\n    \tfibaro:setGlobal(\"Piec\",\"OFF\")\n    \n  \t\t\n\tend\nend\n\nSetMode(tab, heatingType)\n--fibaro:call(device, \"setProperty\", \"ui.Label7.value\", \"Wietrzenie\")\nfibaro:setGlobal(\"Status\", \"Wietrzenie\")","buttonIcon":0,"favourite":false,"main":false},{"id":13,"lua":true,"waitForResponse":false,"caption":"Grzanie","name":"Grzanie","empty":false,"msg":"--tab = { 55, 70, 120, 47, 51, 74 }\n--tab = {51, 70, 55, 120, 47, 14, 74 }\ntab = fibaro:getDevicesId({type = \"com.fibaro.setPoint\"})\n\n\nheatingType = 1\nSetMode = function(tab, heatingType)\n\tfor k,v in ipairs(tab)\n\t\tdo\n  \t\tdevice = v + 2 \n    \tfibaro:debug(\"Setting heatting type to \" .. heatingType ..\" on \" ..device)\n    \tfibaro:call(device, \"setMode\", heatingType);\n  \t\tfibaro:setSceneEnabled(70, true);\n\tend\nend\n\n\nSetMode(tab, heatingType)\n--fibaro:call(device, \"setProperty\", \"ui.Label7.value\", \"Grzanie\")\nfibaro:setGlobal(\"Status\", \"Grzanie\")","buttonIcon":0,"favourite":false,"main":false}]}]},"actions":{"pressButton":1,"setSlider":2,"setProperty":2}}